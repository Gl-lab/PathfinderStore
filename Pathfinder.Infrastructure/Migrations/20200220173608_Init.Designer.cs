// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pathfinder.Infrastructure.Data;

namespace Pathfinder.Infrastructure.Migrations
{
    [DbContext(typeof(PgDbContext))]
    [Migration("20200220173608_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Pathfinder.Core.Entities.Ammunition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Ammunition");
                });

            modelBuilder.Entity("Pathfinder.Core.Entities.BaseDice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("D")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("DiceList");
                });

            modelBuilder.Entity("Pathfinder.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(80)")
                        .HasMaxLength(80);

                    b.HasKey("Id");

                    b.ToTable("CategoryList");
                });

            modelBuilder.Entity("Pathfinder.Core.Entities.DamageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("ShortName")
                        .HasColumnType("text");

                    b.Property<int?>("WeaponId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WeaponId");

                    b.ToTable("DamageTypeList");
                });

            modelBuilder.Entity("Pathfinder.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ImageFile")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(80)")
                        .HasMaxLength(80);

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductList");
                });

            modelBuilder.Entity("Pathfinder.Core.Entities.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AmmunitionId")
                        .HasColumnType("integer");

                    b.Property<int>("CountDiceDamage")
                        .HasColumnType("integer");

                    b.Property<int>("CritRange")
                        .HasColumnType("integer");

                    b.Property<int>("MultiplierCrit")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int?>("Range")
                        .HasColumnType("integer");

                    b.Property<int?>("SizeDiceDamageId")
                        .HasColumnType("integer");

                    b.Property<int?>("WeaponTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AmmunitionId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SizeDiceDamageId");

                    b.HasIndex("WeaponTypeId");

                    b.ToTable("WeaponList");
                });

            modelBuilder.Entity("Pathfinder.Core.Entities.WeaponType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("ShortNAme")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("WeaponTypeList");
                });

            modelBuilder.Entity("Pathfinder.Core.Entities.DamageType", b =>
                {
                    b.HasOne("Pathfinder.Core.Entities.Weapon", null)
                        .WithMany("DamageTypeList")
                        .HasForeignKey("WeaponId");
                });

            modelBuilder.Entity("Pathfinder.Core.Entities.Product", b =>
                {
                    b.HasOne("Pathfinder.Core.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pathfinder.Core.Entities.Weapon", b =>
                {
                    b.HasOne("Pathfinder.Core.Entities.Ammunition", "Ammunition")
                        .WithMany()
                        .HasForeignKey("AmmunitionId");

                    b.HasOne("Pathfinder.Core.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pathfinder.Core.Entities.BaseDice", "SizeDiceDamage")
                        .WithMany()
                        .HasForeignKey("SizeDiceDamageId");

                    b.HasOne("Pathfinder.Core.Entities.WeaponType", "WeaponType")
                        .WithMany()
                        .HasForeignKey("WeaponTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
